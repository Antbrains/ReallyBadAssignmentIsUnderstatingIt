package ANTGAME;
import java.util.ArrayList;
import java.util.Random;

public class Parser 
{	
	private Instructions instructions;
	String input;
	private Turn turn;
	private Direction dir;
	private int state1;
	private int state2;
	private Senses senses;
	private Scents scent;
	
	public Parser(String file) throws Exception
	{
		String stateList = file;
		state1 = -1;
		state2 = -1;
		senses = null;
		dir = null;
		turn = null;
		instructions = null;
		String empty = "";
		stateList.replace("\t", empty);
		String[] stArray = stateList.split(" ");
		String firstState = stArray[0];
		for (int i = 0; i < stArray.length; i++)
		{
			if(firstState == "Sense")
			{
				instructions = instructionsParser(stArray[0]);
				dir = directionParser(stArray[1]);
				state1 = parserInt(stArray[2]);
				state2 = parserInt(stArray[3]);
				senses = sensesParser(stArray[4]);
			}
			else if (firstState == "Mark")
			{
				instructions = instructionsParser(stArray[0]);
				scent = markParser(stArray[1]);
				state1 = parserInt(stArray[2]);
			}
			else if (firstState == "Unmark")
			{
				instructions = instructionsParser(stArray[0]);
				scent = markParser(stArray[1]);
				state1 = parserInt(stArray[2]);
			}
			else if (firstState == "PickUp")
			{
				instructions = instructionsParser(stArray[0]);
				state1 = parserInt(stArray[1]);
				state2 = parserInt(stArray[2]);
			}
			else if (firstState == "Drop")
			{
				instructions = instructionsParser(stArray[0]);
				state1 =  parserInt(stArray[1]);
			}
			else if (firstState == "Turn")
			{
				instructions = instructionsParser(stArray[0]);
				turn = turnParser(stArray[1]);
				state1 =  parserInt(stArray[1]);
			}
			else if (firstState == "Move")
			{
				instructions = instructionsParser(stArray[0]);
				state1 =  parserInt(stArray[1]);
				state2 =  parserInt(stArray[2]);
			}
			else if (firstState == "Flip")
			{
				instructions = instructionsParser(stArray[0]);
				int a =  parserInt(stArray[1]);
				state1 =  parserInt(stArray[2]);
				state2 =  parserInt(stArray[3]);			
			}
			else
			{
				throw new Exception("State not recognised.");
			}
		}
			
						
	}
	
	
	public Instructions getInstructions() 
	{
		return instructions;
	}


	public Turn getTurn() 
	{
		return turn;
	}


	public Direction getDir() 
	{
		return dir;
	}


	public int getSt1() 
	{
		return state1;
	}


	public int getSt2()
	{
		return state2;
	}

	
	public Senses getSenses() 
	{
		return senses;
	}

private Senses sensesParser(String givenString)
{
	String a = givenString;
	if (a == "Friend")
	{
		return Senses.Friend;
	}
	else if (a == "Foe")
	{
		return Senses.Foe;
	}
	else if (a == "FriendWithFood")
	{
		return Senses.FriendWithFood;
	}
	else if (a == "FoeWithFood")
	{
		return Senses.FoeWithFood;
	}
	else if (a == "Food")
	{
		return Senses.Food;
	}
	else if (a == "Rock")
	{
		return Senses.Rock;
	}
	else if (a == "Marker")
	{
		return Senses.Marker;
	}
	else if (a == "UnMark")
	{
		return Senses.UnMark;
	}
	else if (a == "Home")
	{
		return Senses.Home;
	}
	else if (a == "FoeHome")
	{
		return Senses.FoeHome;
	}
	else
	{return null;}
}
private Direction directionParser(String givenString)
{

	String a = givenString;
	if (a == "Here")
	{
		return Direction.Here;
	}
	else if (a == "Ahead")
	{
		return Direction.Ahead;
	}
	else if (a == "LeftAhead")
	{
		return Direction.LeftAhead;
	}
	else if (a == "RightAhead")
	{
		return Direction.RightAhead;
	}
	else
	{return null;}
}
private Turn turnParser(String givenString)
{
	String a = givenString;
	if (a == "Left")
	{
		return Turn.Left;
	}
	else if(a == "Right")
	{
		return Turn.Right;
	}
	else
	{return null;}
}
private Instructions instructionsParser(String givenString)
{
	
	String a = givenString;
	if (a == "Sense")
	{
		return Instructions.Sense;
	}
	else if (a =="Mark")
	{
		return Instructions.Mark;
	}
	else if (a =="UnMark")
	{
		return Instructions.UnMark;
	}
	else if (a =="PickUp")
	{
		return Instructions.PickUp;
	}
	else if (a =="Drop")
	{
		return Instructions.Drop;
	}
	else if (a =="Turn")
	{
		return Instructions.Turn;
	}
	else if (a =="Move")
	{
		return Instructions.Move;
	}
	else if (a =="Flip")
	{
		return Instructions.Flip;
	}
	else
	{return null;}
}
private int parserInt(String givenString)
{
	int a = Integer.parseInt(givenString);
	return a;
}
private Scents markParser(String givenString)
{
	String a = givenString;
	int b = Integer.parseInt(givenString);
	if (b < 6)
	{
		switch (b)
		{
		case 1: return Scents.One;
				
		case 2:	return Scents.Two;

		case 3: return Scents.Three; 

		case 4: return Scents.Four; 

		case 5: return Scents.Five; 

		case 6: return Scents.Six; 

		}
	
	}
	return null;
}
}
